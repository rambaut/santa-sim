#summary Documentation

= Installation =

= Invocation =

== Windows platforms ==

The simplest way to run a simulation configured in config.xml is to invoke the following command from the DOS prompt, from within the directory where your config.xml file is located:

{{{
java -jar c:\path\to\santa.jar config.xml
}}}

Replace `c:\path\to\santa.jar` with the path where you extracted the santa.jar file.

In some cases it may be necessary to configure the JVM to use more memory:

{{{
java -Xmx512M -jar c:\path\to\santa.jar config.xml
}}}

== UNIX, MacOS X, or Linux ==

Change directory to where your config.xml file is located, and invoke using:

{{{
$ java -jar /path/to/santa.jar config.xml
}}}

Replace `/path/to/santa.jar` with the path where you extracted the santa.jar file.

In some cases it may be necessary to configure the JVM to use more memory:

{{{
$ java -Xmx512M -jar /path/to/santa.jar config.xml
}}}

== Command-line options ==

You can bind values to parameters used in your config file. For example to bind the value '10000' to parameter 'generations', and '0.1' to parameter 'selection' use:

{{{
java -jar .../santa.jar -generations=10000 -selection=0.1 config.xml
}}}

= Configuration XML File =

The basic format of a configuration file is like this:

{{{
<santa xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="santa.xsd">

    <!--
      How many times should the simulation be run ?

      Optional (default = 1)
      -->
    <replicates>100</replicates>

    <!--
      The configuration for a single simulation run
      -->
    <simulation>

        <!--
          Description of the genome: properties, example sequences, and features
          -->
        <genome>
            ...
        </genome>

        <!--
          Definition of the initial population
          -->
        <population>
            ...
        </population>

        <!--
          Description of the (default) fitness function
          -->
        <fitnessFunction>
            ...
        </fitnessFunction>

        <!--
          Description of the (default) replicator
          -->
        <replicator>
            ...
        </replicator>

        <!--
          Description of the (default) mutator
          -->
        <mutator>
            ...
        </mutator>

        <!--
          Definition of a first epoch
          -->
        <epoch>
            <!--
              A name for the epoch (used only to display simulator progress)
              -->
            <name>epoch 1</name>

            <!--
              Duration of the epoch in number of generations
              -->
            <generations>1000</generations>

            <!--
              Optionally, override the default fitness function, replicator, or mutator
              -->
            <fitnessFunction>
                 ....
            </fitnessFunction>

            <replicator>
                 ....
            </replicator>

            <mutator>
                 ....
            </mutator>
        </epoch>

        <!--
          Definition of a second, ... epoch
          -->
        <epoch>
            ...
        </epoch>

    </simulation>

</santa>
}}}

{{{
              <!--
               Nucleotide length of the genome
               -->
              <length>21</length>

              <!--
               One or multiple sequences.
               These sequences may be used:
                - creating an initial population, and for
                - configuring purifying selection to reflect observed states
               -->
	      <sequences>
>seq1
CCTCAGGTCACTCTTTGGCAAC
>seq2
CCTCGGGTCACTCCTTGGCGAC
	      </sequences>
	      <feature>
		   <name>CDS</name>
		   <type>aminoAcid</type>
		   <coordinates>1-1302</coordinates>
	      </feature>
         </genome>
}}}